# from aiogram import Router
# from aiogram.types import Message
# from markup import link_ref_button, buttons_assist
#
#
# router=Router()
#
#
# @router.message()
# async def reply(message: Message):
#     if message.text.lower() in ["–º–µ–Ω—é", "/–º–µ–Ω—é", "/menu"]:
#         await message.answer(text="Welcome!üëÄ\n –í —ç—Ç–æ–º –±–æ—Ç–µ –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ —Ä–µ—Ñ–µ—Ä–µ–Ω—Å—ã –¥–ª—è —Å–∫–µ—Ç—á-—Ä–∞–∑–º–∏–Ω–æ–∫, —Ç—É—Ç–æ—Ä–∏–∞–ª—ã –∏ –∫–∏—Å—Ç–∏\n –ö–æ–º–∞–Ω–¥—ã:üëáüèª\n /help - –ø–æ–º–æ—â—å\n /about - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ ", reply_markup=buttons_assist)
#
#     if message.text.lower() in ["—Ä–µ—Ñ–µ—Ä–µ–Ω—Å—ã"]:
#
#         await message.answer (text="<b>–°—Å—ã–ª–∫–∞ –Ω–∞ –¥–æ—Å–∫—É —Å —Ä–µ—Ñ–µ—Ä–µ–Ω—Å–∞–º–∏</b>\n", reply_markup=link_ref_button, parse_mode= "html" )
#
#     if message.text.lower() in ["–∏–¥–µ–∏ –¥–ª—è –ø–æ—Å—Ç–∞"]:
#         await message.answer(text="–í—ã–±–µ—Ä–∏ —Ç–µ–º—É –¥–ª—è –ø–æ—Å—Ç–∞üí≠‚ú®üé≤\n")
#
#     if message.text.lower() in ["—Ç—É—Ç–æ—Ä–∏–∞–ª—ã"]:
#         await message.answer(text="–°—Å—ã–ª–∫–∞ –Ω–∞ –ø–∞–ø–∫—É —Å —Ç—É—Ç–æ—Ä–∏–∞–ª–∞–º–∏\n")
#
#     if message.text.lower() in ["–∫–∏—Å—Ç–∏"]:
#         await message.answer(text="–°—Å—ã–ª–∫–∞ –Ω–∞ –ø–∞–ø–∫—É —Å –∫–∏—Å—Ç—è–º–∏\n")